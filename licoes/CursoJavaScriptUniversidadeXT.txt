CursoDeJavascript 
Índice
A pressa passa e a merda fica Introdução Histórica (e lição de vida)
JavaScript un zero un ¡Hola Mundo!
Como declarar uma variável Sério mesmo, como declarar uma variável!
Conversão de tipos e falsy values
Null e nullable
Namespaces
Number
String
Interpolação de variáveis
Array
RegExp
Function
Operadores rest e spread
Como declarar objetos Se vc já achou as variáveis confusas...
Object
Objetos antigos
Os muitos laços for
Ado, a ado, cada um no seu quadrado
Escopo das variáveis
Variable Hoisting
Módulos simples
Closures
Colocando coisas dentro do escopo e type aliasing
Resolvendo var e corrigindo closures
Tirando coisas de dentro do escopo

#06/02/2018 - Aula 01 - Javascript 
ECMA International para 
Tecnologia de Script Manipular o conteudo , alterar a apresentacao,interagir com o usuario ,etc 
interacao com linguagens dinamicas
#06/02/2018 - Aula 02 - Javascript 
Exemplo de Hello World 
#06/02/2018 - Aula 03 - Browser 
Interpretar a lingaguem de javascript 
Oferecer ao javascript referencias aos elementos do browser... Auxilio do Browser .. Deixas as referencias do Browser.. 
Conceito de Objetos propriedades e Metodos.. Objetos da vida .. caracteristicas... atributos e metodos acoes funcoes... 
Pessoa = altura peso profissao e andar dormir trabalhar... 
Objetos internos da Lingaguem (string ,date, number)
Objeto Especificos do Browser ( window ,documento)
Objetos Personalizados() via programados  
#06/02/2018 - Aula 04- Manipuladores de Eventos 

21:18 
#06/02/2018 - Aula 05 - Variavel 
Sintaxe ; nome = ""; _variavel ou variavel ou $variavel 
Tipos Primitivos de variaveis = number string  boolean
letras maiusculas criacao objetos ou constantes.. 
tem por forma de escrita IDADE como constante 
Pessoa (Objeto).. 
Palavras reservadas... nao devem ser nomeadas ... 
#06/02/2018 Constantes 
Scape de String 
undefined , null , Nan e Infinty 
Constantes 
Conceito de scape aspas dupla e aspa simples 
"R'dddd"
"R\"ddddd"
"R\\ddddd"  caracter \ paa representar.. 
\n quebra de linha 
\n \u7231  caracteres unicode 
UNICODE.ORG 
Tipo Primitivos == undefined  um tipo null tipo Nan tipo infinty 
uma valor maior positivo ou negativo... 
Infinity como sendo uma constante... 

var nome; undefined;
nome = null;
nome = 3 * "pessoas";
nome = 2 + Infinity;

#AULA 07 Camadas 
Construindo em arquivos separados 
Conceitos de Camdas 
Adicionar Inlne Incorporado Externo 
Comentarios Linha Unica e Multiplas Linhas 
https://www.youtube.com/watch?v=IJeS19fBd1c&list=PLxQNfKs8YwvEk85FbeXxDnFecAntIQdRf&index=8   
#Aula 8 Operadores == 
Operadores e Operadores 
Lista de Operadores 
Denominacao (binario, unario, ter)
Conversao de Dados 
Precedencia 
Tipos Matematicos - De Comparacao - Logicos - De Bits 
Operadoes dois operandos = binarios 
Operadores 
% resto da divisao de um numero por outro 
A partir do primeiro operando e tiver soma ele vai tenar converte para string 
uso de outros operadores relacionados ao matemticos ... ela tentar converter matematicos 
Aula 09 == 
positivo e negativo  + -  UNARIO 
++ Incremento  -- Decremento 
exemplo var x = 7 +3;  alem de executar somar ou vamos concatenar duas strings ... 
exemplo var x = "oi" + "pessoal"
var x = 12.3 - 5; 
var x = "texto" - "5"  gerar o valor NaN 
var x = 5 * 3   var x = 5/3   (1.6666)
var x = 5 % 3  (2)
operador unario   var x = +4   var  x = -2;  trocar o sinal do operador  (-1*)
var x = 6 
var y = ++x;  igual x = x + 1 
"x" iugal a 7 
"y" igual a 7 
Outras formas de usar Operador de Incremento... 
var x = 8 
var y = x++; 
x igual a 9 
y igual a 8 
Aula 10 - Operacoes de Comparacao 
== Igual 
==== Igual e Tipo de Dados é igual um ao outro 
!= 
!=== Tipo e Valor diferente 
> <  >= <= 
var x = 6; 
cenario 1 x == 6 true
cenario 2 x ==7 false  
cenario 3 x == "6"  true  fez a conversao do tipo 
cenario 4 x === "6" false 
cenario 5 x != "6"  false  
cenario 6 x != "5" true 
cenario 7 x !== "6" true tipo diferente 
cenario 8 x > 7 false 
cenario 9 x > 5 true 
cenario 10 "a" > "b"  false comparacao com strings 
cenario 11  x < 7 true 
cenario 12 x >= 6 true 
Aula 11 Operadores Logicos 
&& AND || OR ! NOT 
exemplos .... 
var x = 6;
(x >=1 && x <10) true 
(x >=1 && x <5) false 
(x >=1 || x <5) true 
!(x>=1) false 
Aula 12 - Operadores de Atribuicao - 
+= Atribuicao *= mutiplicacao /= divisao %= modulo  -= Subtracao 
Exemplo 
var x = 6;
var x = x + 3; 
var x += 3; 


Aula 13 Operadores Especiais 
?: operador ternario 
, separa expressoes avaliadas 
delete apaga operando 
in indica se existe a propriedade especificada 
instanceof indica se objeto é do tipo especificado 
new cria nova instancia de objeto 
this referencia do objeto atual 
typeof retorna o tipo do operando 
() chama a funcao .. 

Exemplo do Ternario 
var idade = 6; 
var x =  (idade >=18) ? "maior de idade" : "menor de idade";
Exemplo separador de expressoes 
exemplo inicializar mais de uma variaves 
var idade = 21, sexo = "masculino";
Exemplo apaga um atributo de objeto ou elemento de um array 
Pessoa = { nome:"Fulano"}; 
alert(Pessoa.nome);
delete Pessoa.nome;
alert(Pessoa.nome);
Exemplo de uso do in para verificar de propriedade em um objeto
Pessoa = { nome:"Fulano"}; 
alert("nome" in Pessoa); true 
alert("email" in Pessoa); false; 
Exemplo do instanceof 
var idade = new Number(31);
alert(idade instanceof String) false
alert(idade instanceof Number) true
Tem uma relacao ao uso do Construtor... na funcao 
ou uso de tipos primitivos tem que utilizar New String New Date
New Number para reconhecer que e uma String ou Object 

Exemplo do Operador new() = criar um objeto.. 
tomar cuidado para tipos primitivos... ira retonar object ao inves do tipo 

Exemplo do typeof 
alert(typeof(3))  number 
alert(typeof(true)) boolean
alert(typeof(function(){}))  function      
uso de new Number new String == retornar object 
Array retornar object usar outro metodos == 
Array.isArray or Object.prototype.toString.call

#Aula 15  = Declaracao para estruturas
Controle Condicionais Loops Exceções ... 
Declaracao explicitacoes =  var a, b, c;  , separacao de expressoes 
Declaracao function dividir(x,y) declaracao return de uma operacao a ser atribuida...  
se nao houver return voce tera um resultado undefined..
#Aula 16 Estruturas condicionais ... 
if/else estrutura  switch .. 
if () situacao verdadeiro 
Exemplo: var idade = 6; if (idade < 11) {alert('criança');} 
Exemplo: var numero = 5 if ((numero % 2) == 0) { altert('par';); } 
Exemplo: var passou = false; if(passou) {alert('contratado');} else {alert('estude mais');}
Exemplo: var numero = 5 if ((numero % 2) == 0) { alert('par';); } else {alert('impar');}
Conceit do else if 
Exemplo: 
if (idade < 11) {} 
else if (idade > 11 && idade <= 16)
else if (idade > 16 && idade <= 21)
else if (idade > 21 && idade < 60) 
else {}

Aula 17 - Estrutura condicional switch = 
um mesmo valor sendo comparado com varios valores diferentes .. 
var sexo = "M";
switch(sexo)
{
  case "M":
  break; 
  case "F":
  break;
  default: 
}
podemos suprimir o default e  breack 
case "M":
case "P": 
Aula 18 - Estrutura Condicional do Calculo IMC

Aula 19 - Estrutura de Repeticacao 
inicializacao , teste ,acao , atualizacao
for(var i=0; i<3; i++) {} ou decrementar for(var i=10; i>0; i--) 
Numeros pares 
var resultado = "";
for(var i=0; i<20; i++) { if ((i%2) ==0) { resultado += i + ",";} }
Outro Exemplo 
for(var i=0; i<20; i++) { if ((i%2) ==0) { if(i==20) {resultado+= i;} else {resultado += i + ",";}} }
Outro Exemplo 
for(var i=0; i<20; i++) { if ((i%2) ==0) { if(i==20) {resultado+= i; break;} resultado += i + ",";} }
interrompe a execução... 
Cuidado com o  loop infinito...
Aula 20 - Loop For IN - 
iterates over the enumerable properties
Estrutura 
Exemplo: 
var numeros = new  Array("um",""dois,"tres");
basico 
for (var i=0;i<numeros.length;i++)
{
  alert(numeros[i]);
}
for (i in numeros)
{
  alert(numeros[i]);
}

var Carro = {marca:"nissan", modelo:"3456"};
for (var props in Carro)
{
  alert(props);
  alert(Carro[props]);
 
}
Note: for...in should not be used to iterate over an Array where the index order is important.
ColoredTriangle.prototype = triangle;

var obj = new ColoredTriangle();

for (const prop in obj) {
  if (obj.hasOwnProperty(prop)) {
    console.log(`obj.${prop} = ${obj[prop]}`);
  } 
#Aula 21 = Estrutura while 
var i=0;
while (i <3)
{
  i++;
} 

do 
{
} 
while()  
#Aula 22 Estruturas de excecoes para tratamento de erros 
throw 
try catch finally
Objeto Error.. traz informacoes sobre o erro que acabou de ocorrer 
message name o tipo de erro  toString() tipo de erro mais a mensagem separado por um sinal de dois pontos .. 
EvalError  Erro usando eval() 
RangeError  Numero extrapola limites
ReferenceError  referencia a valor indefinido 
SintaxeError    Erro de sintaxe da linguagem 
TypeError       Operando diferente do esperado 
URIError        Uso errado das funcoes URI
var x = prompt("informe um numero maior que 10");
try{

if(x < 10 ) { throw "numero menor que 10"; }

}
catch(e)
{
   alert(e.name + "-" + e.message);
   alert(e.toString());
}
finally  // e executada ocorrendo ou nao um erro 
{
  alert('eecutado');
}
throw lancando uma string .. ou mesmo um erro..

Temos a palavra Chave with define o escopo do bloco... 
var Carro = {marca:"nissa", modelo:"350Z", potencia: {cavalos:350; velocidade: "320km"};}

alert(Carro.potencia.cavalos);
ou 
with(Carro.potencia)
{
alert(cavalos);
}

#Aula 23 Objetos javascript 
Tipos Primitivos Não são objetos = estados 
number, string, boolean  dados bruto nao tem atibuto nem funcao 
Objetos nos Javascript 
Object mais generico que temos.. Todos os sao objects e todos arrays e nem sempre tratameot como Array 
Boolean ele tem atributos e Number ele tem atributos e funcoes e String (contem o tipos primitivos)
Array por lista se quisermos obter 
Date para manipular datas 
Math funcoes aritmeticas 
Function para criar funcoes 
Objetos de Erros nas linguagem Javascript 
O que ocorre quando criamos tipos primitivos 
var nome = "Ricardo";
alert(typeof(nome)); //exibe a informacao string tudo minusculo ... 
alert(nome.length) acabou de dizer tipos primitivos de dados e acessou um atributo. O tipo primitivo 
esta andando de maos dadas com o Objeto relacionado. envolve um tipo primitivo ... 
new String(nome).length ====> encapsula a informacao dentro .. faz por debaixo dos panos... 
e logo em seguida descarta objeto que acabou de criar...
nome.ToUpperCase() 
  
Number String Array Date Math Function (Nativos das linguagem)

Aula 24# Universidade Objeto Bololean 
Boolean encapsula o tipo primitivo boolean = true e false 

Exemplo:
var b = true; 
alert(b);
alert(typeof(b)); retorna boolean 
Outro forma de exemplo 
var b = new Boolean(true);
alert(typeof(b)); retorna Object 
alert( b instanceof Boolan);  retorna true 
Forma de criar 
var b = new Boolean(); OU var b = new Boolean(1); OU var b = new Boolean(false); OU var b new Boolean("");
"Zero, null, NaN e a string vazia são ienerentemente false; o resto é tudo true";
Funcoes para objetos Boolean 
Metodo toString() e o metodo valueOf()
b.valueOf()  retorna o valor primitivo do tipo... 
b.toString() converte o valor primitivo para o tipo primitivo string 

Aula 25# Objeto Number ==== 
toString valueOf  representacao em string do tipo primitivo.. retornar o proprio tipo primitivo..
var n = 120.35; 
ou 
var n = new Number(120.35);
alert(typeof(n)) retorna um object 
alert( n instance of Number) retornar true 
var n = new Number("120.35"); converte o valor para o tipo primitivo.. 

Conceito de Funcoes Estaticas ou Metodos Estatico... 
Independente de uma instancia...
Propriedades estaticas do Objeto Number 
Number.MAX_VALUE = maior numero javascript 
Number.MIN_VALUE = menor numero javascript 
Number.NaN  referente NaN objeto que nao é numero 
Number.NEGATIVE_INFINITY 
Number.POSITIVE_INFINITY  
Funcoes 
n.toFixed() numero de casas decimais no parametros.. se omitido o numero nao retornara casas deciamis... se colocar 2 retornar precisao de duas casas.
(n.toPrecision()) quantidade de digitos definidas no parametro.. PRECISAO 
(n.toExponential()) converte para notacao cientifica... entre 0 e 20.. 

#Aula 26
String = Observar que é a string é imutavel e os métodos retornam novas instancias..  
Conceitos de Templates ...
w3wchools.com mantido pela mesma equipe W3C consortium... 
Javascript = String 
https://www.w3schools.com/js/js_string_methods.asp
https://www.w3schools.com/jsref/jsref_obj_string.asp
criar string  =  var x  = "texto dentro de aspas";
var x = new String("texto dentro de aspas");
alert(x);
document.write(x); Acessar as informacoes O Leitor De Acessiblidade nao acessa esse tipo de informacao por esse metodo... 
Metodos Principais..
var x = String("texto dentro de aspas") 
x.length = Comprimento dos caracteres  retorna 21 
x.charAt(x.length - 1)   retornar o ultimo caractere.. letra s  posicionamento do caracter 
x.charCodeAt() retornar no padrao unicode - retorna o codigo unicode codigo 115 para letra s  
x.concat(" Javascript") = retorno  'texto dentro de aspas javascript'
String.fromCharCode(115,123,154) = retorna as letras saf
x.indexOf("dentro") comeca na posicao 6 pirmeira ocorrencia
var x = new String("texto denro de texto de aspas"); 
x.indexOf("texto") comeca na posicao 16 ulitma ocorrencia  
var regularex = /[a-e]/;
x.match(regularx);
x.replace('texto','txt');
--Funcoes recortar as strings 
x.substring(5,8);  dois parametros inicio e fim
x.substr(5,8) informa o parametro do indice inicial e soma os caracteres para frente seria 5,12  
x.slice(5,8) é mais rigoroso que o substring == 
var t = "a,g,h"; 
t.split(',')[1]; usa o seprar para montar o array de caracteres a partir do Separador.. 
x.toLoweCase() 
x.toUpperCase()
Funcoes para marcacoes nas strings colocar HTML = possuem problemas em relacao a acessibilidade..
orientado a nao segui-las 
x.big , x.blink , x.sup() , x.strike(), x.bold(), x.italic(), x.link('http://www.uol.com.br')
Sring mais poderosas 
Templates strings - com uso da crase - ES6 
http://2ality.com/2013/09/javascript-unicode.html
Interpolacao de variaveis 
let nome = 'Pafúncio';
let respostaSimples = 'Oi ' + nome + '. Já te ligo ok?';
let respostaTemplate = `Oi ${nome}. Já te ligo ok?`;



#Aula 27
http://blog.alura.com.br/category/front-end/
Array = Aula Informacao -   Colecao de dados Indexados 
var paises = new Array();
var paises = new Array("Brasil","Russia","India","China");
paises = "Brasil","Russia","India","China"

Arrays indexados cada um dos elementos recebem uma posição dentro do Array. 
Essa indexacao são chamados de array indexados conjunto chave=valor chave = 0 valor = Brasil 

Apresentar elementos do array = alert(paises);
elemento na posicao 0 alert(paises[0]);
Alterar elemento na posicao = paises[0] = "Brazil";
length quantos elementos temos no nosso array alert(paises.length) temos 4 elementos 
imprimindo elemento a elemento 
for(var i=0; i < paises.length ; i++)
{
   alert(paises[i])
}
saber o indice do elemento = alert(paises.indexOf("India")); retorna 2 
saber a ultima ocorrencia do elemento paises.lastIndexOf("Brasil")
Falar sobre ressalva antes de entrar na ordenação 
podemos criar um array == sintaxe literal =   var paises ["Brasil","",""];
Quando um crio array literal ou via new Array sao criados como Array 
via string tambem temos o conceito de array var s = "Acai"  alert(s[1]); acessar via for os elementos do string
outra forma de inicializacao 
var paises = new Array();
paises[0] = "Brasil";
funcao reverse inverte a do elementos do nosso array 
alert(paises.reverse()) ordena pelo indice... troca 
alert(paises.sort()) sort em ordem alfabetica
paises.join(";")  alterar o separador para exibicao das informacoes 
concat concatena no arrray outros elementos de outro array 
paises.concat("EUA","Argentina); 
a funcao slice retornar um subarray do nosso array Ela pode receber de um a dois parametros 
frutas.slice(3)  ou frutas.slice(2,4)
metodo splice remover elementos no array e pode incluir no lugar removido... 
alert(frutas.splice(2,2),"abacate","acerola","umbu", "cupuacu") 
Capacidade de trabalhar no Array como FILAS como FIFO padrao de uma fila ... 
var pessoas =["Ricardo","Sandra","beatriz"],"Lwarence"]; 
alert(pessoas.push("janaina"); retorna quantos item temos no array 
pessoas.shift() remove da fila o primeiro elemento retorna o elemento .. e no final ficam 4 pessoas..
poessoas.pop() remove o ultimo elemento da fila .. mostra a ultima removida e ficou somente as tres..
pessoas.unshift no inicio da fila.. 




Outros Itens 
https://www.devmedia.com.br/programacao-assincrona-em-javascript-com-promises/33184
https://www.devmedia.com.br/javascript-reduce-reduzindo-uma-colecao-em-um-unico-objeto/37981
https://www.devmedia.com.br/javascript-concat-concatenando-arrays-e-strings/37964
https://www.devmedia.com.br/javascript-como-e-quando-utilizar-os-operadores-e/37782


https://escritoriodeprojetos.com.br/matriz-de-rastreabilidade-dos-requisitos
https://www.devmedia.com.br/guia/requisitos-modelagem-e-uml/35697
https://dotnetthoughts.net/building-a-private-nuget-repository-using-klondike/
https://docs.microsoft.com/pt-br/nuget/hosting-packages/overview
https://docs.microsoft.com/pt-br/nuget/hosting-packages/overview
  

 
